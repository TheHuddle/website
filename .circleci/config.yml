---
version: 2.1

aliases:
  - &junit-results
    ./dist/junit
  - &deployment-context
    cloud.codehuddle.org
  - &rebase
    run:
      name: Rebasing to `main`
      command: |
        echo 'attempting to rebase to main...' \
          && git fetch origin main \
          && git config --global user.email circleci@codehuddle.org \
          && git config --global user.name circleci \
          && git rebase origin/main \
          && echo "successfully rebased to main!" || {
            echo -e "FAILED\nplease rebase manually"
            exit 1
          }


orbs:
  aws-cli: circleci/aws-cli@2.0
  aws-ecr: circleci/aws-ecr@7.3.0
  browser-tools: circleci/browser-tools@1.1.0
  node: circleci/node@4.7


executors:
  test-runner:
    docker:
      - image: cimg/node:14.15-browsers
    resource_class: medium

jobs:
  test:
    executor: test-runner
    steps:
      - checkout
      - *rebase
      - node/install-packages:
          pkg-manager: npm
      - run:
          name: check format
          command: npm run ci:check-format
      - browser-tools/install-chrome
      - run:
          name: run tests
          command: npm run ci:test
      - store_test_results:
          path: *junit-results
      - store_artifacts:
          path: *junit-results

  build:
    machine: true
    steps:
      - checkout
      - *rebase
      - run: docker build -f ./docker/Dockerfile .

  publish:
    executor: aws-cli/default
    steps:
      - checkout
      - aws-cli/setup
      - run: /home/circleci/project/.circleci/bin/publish


workflows:
  build:
    jobs:
      - test

      - build:
          requires: [test]
          filters:
            branches:
              ignore: main

      - aws-ecr/build-and-push-image:
          requires: [test]
          context: *deployment-context
          filters:
            branches:
              only: main
          repo: codehuddle
          dockerfile: ./docker/Dockerfile
          tag: 'app'
          workspace-root: ./project

      - publish:
          requires: [aws-ecr/build-and-push-image]
          context: *deployment-context
          filters:
            branches:
              only: main
